package interfaces;

import controle.ControladorCadastroFaculdades;
import entidade.Faculdade;
import entidade.Faculdade.ÁreaConhecimento;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


public class JanelaCadastroFaculdades extends javax.swing.JFrame {

    ControladorCadastroFaculdades controlador;
    DefaultListModel modelo_lista_faculdades;

    public JanelaCadastroFaculdades(ControladorCadastroFaculdades controlador) {
        this.controlador = controlador;
        initComponents();
        inicializarListaFaculdades();
        limparCampos();
    }
    
    public void inicializarListaFaculdades(){
        modelo_lista_faculdades = (DefaultListModel) faculdades_cadastradasList.getModel();
        Faculdade[] visões = Faculdade.getVisões();
        for(Faculdade visão:visões) modelo_lista_faculdades.addElement(visão);
    }

    private void limparCampos(){
        siglaTextField.setText("");
        nomeCompletoTextField.setText("");
        anoCriaçãoTextField.setText("");
        áreaConhecimentoComboBox.setSelectedIndex(-1);
        sequencialTextField.setText("");
    }
    
    private Faculdade obterFaculdadeInformada(){
        String nomeCompleto = nomeCompletoTextField.getText();
        if (nomeCompleto.isEmpty()) return null;
        String sigla = siglaTextField.getText();
        if (sigla.isEmpty()) return null;
        String áreaConhecimento = (String) áreaConhecimentoComboBox.getSelectedItem().toString();
        if (áreaConhecimento.isEmpty()) return null;
        int anoCriação = Integer.parseInt((anoCriaçãoTextField.getText()));
        if (anoCriação < 0) return null;
        String sequencial_str = sequencialTextField.getText();
        int sequencial = 0;
        if (!sequencial_str.isEmpty()) sequencial = Integer.parseInt(sequencial_str);
        return new Faculdade(sequencial,sigla, nomeCompleto, ÁreaConhecimento.valueOf(áreaConhecimento), anoCriação);
    }

    private JanelaCadastroFaculdades() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        faculdades_cadastradasLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        faculdades_cadastradasList = new javax.swing.JList();
        siglaLabel = new javax.swing.JLabel();
        siglaTextField = new javax.swing.JTextField();
        nomeCompletoLabel = new javax.swing.JLabel();
        nomeCompletoTextField = new javax.swing.JTextField();
        áreaConhecimentoLabel = new javax.swing.JLabel();
        áreaConhecimentoComboBox = new javax.swing.JComboBox();
        anoCriaçãoLabel = new javax.swing.JLabel();
        anoCriaçãoTextField = new javax.swing.JTextField();
        comandosPanel = new javax.swing.JPanel();
        inserirButton = new javax.swing.JButton();
        limparButton = new javax.swing.JButton();
        consultarButton = new javax.swing.JButton();
        alterarButton = new javax.swing.JButton();
        removerButton = new javax.swing.JButton();
        sequencialLabel = new javax.swing.JLabel();
        sequencialTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastrar Professores Efetivos");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        faculdades_cadastradasLabel.setText("Faculdades Cadastradas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(19, 10, 0, 0);
        getContentPane().add(faculdades_cadastradasLabel, gridBagConstraints);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(258, 100));

        faculdades_cadastradasList.setModel(new DefaultListModel());
        faculdades_cadastradasList.setPreferredSize(new java.awt.Dimension(100, 100));
        jScrollPane1.setViewportView(faculdades_cadastradasList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        siglaLabel.setText("Sigla");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 39, 0, 0);
        getContentPane().add(siglaLabel, gridBagConstraints);

        siglaTextField.setPreferredSize(new java.awt.Dimension(100, 30));
        siglaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siglaTextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 243;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        getContentPane().add(siglaTextField, gridBagConstraints);

        nomeCompletoLabel.setText("Nome Completo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 39, 0, 0);
        getContentPane().add(nomeCompletoLabel, gridBagConstraints);

        nomeCompletoTextField.setPreferredSize(new java.awt.Dimension(200, 30));
        nomeCompletoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeCompletoTextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 133;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        getContentPane().add(nomeCompletoTextField, gridBagConstraints);

        áreaConhecimentoLabel.setText("Área de Conhecimento");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 38, 0, 0);
        getContentPane().add(áreaConhecimentoLabel, gridBagConstraints);

        áreaConhecimentoComboBox.setModel(new DefaultComboBoxModel(ÁreaConhecimento.values()));
        áreaConhecimentoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                áreaConhecimentoComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(áreaConhecimentoComboBox, gridBagConstraints);

        anoCriaçãoLabel.setText("Ano de Criação");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 39, 0, 0);
        getContentPane().add(anoCriaçãoLabel, gridBagConstraints);

        anoCriaçãoTextField.setPreferredSize(new java.awt.Dimension(200, 30));
        anoCriaçãoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anoCriaçãoTextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 210;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.2;
        getContentPane().add(anoCriaçãoTextField, gridBagConstraints);

        comandosPanel.setMinimumSize(new java.awt.Dimension(200, 35));
        comandosPanel.setPreferredSize(new java.awt.Dimension(200, 35));
        comandosPanel.setLayout(new java.awt.GridBagLayout());

        inserirButton.setText("Inserir");
        inserirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inserirFaculdade(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 2, 6, 2);
        comandosPanel.add(inserirButton, gridBagConstraints);

        limparButton.setText("Limpar");
        limparButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparPainel(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        comandosPanel.add(limparButton, gridBagConstraints);

        consultarButton.setText("Consultar");
        consultarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarFaculdade(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        comandosPanel.add(consultarButton, gridBagConstraints);

        alterarButton.setText("Alterar");
        alterarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarFaculdade(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        comandosPanel.add(alterarButton, gridBagConstraints);

        removerButton.setText("Remover");
        removerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerFaculdade(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        comandosPanel.add(removerButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 213;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(58, 14, 45, 6);
        getContentPane().add(comandosPanel, gridBagConstraints);

        sequencialLabel.setText("Identificador Sequencial");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(9, 0, 0, 0);
        getContentPane().add(sequencialLabel, gridBagConstraints);

        sequencialTextField.setEditable(false);
        sequencialTextField.setPreferredSize(new java.awt.Dimension(100, 30));
        sequencialTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sequencialTextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        getContentPane().add(sequencialTextField, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inserirFaculdade(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inserirFaculdade
        Faculdade faculdade = obterFaculdadeInformada();
        String mensagem_erro = null;
        if (faculdade != null) mensagem_erro = controlador.inserirFaculdade(faculdade);
        else mensagem_erro = "Algum atributo da faculdade não foi informado";
        if (mensagem_erro == null) {
            int sequencial = Faculdade.últimoSequencial();
            faculdade.setSequencial(sequencial);
            modelo_lista_faculdades.addElement(faculdade.getVisão());
            faculdades_cadastradasList.setSelectedIndex(modelo_lista_faculdades.size()-1);
            sequencialTextField.setText(""+sequencial);
        }
        else informarErro(mensagem_erro);
    }//GEN-LAST:event_inserirFaculdade

    private void consultarFaculdade(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarFaculdade
        Faculdade visão = (Faculdade) faculdades_cadastradasList.getSelectedValue();
        String mensagem_erro = null;
        Faculdade faculdade = null;
        if (visão != null){
            faculdade = Faculdade.buscarFaculdade(visão.getSequencial());
            if (faculdade == null) mensagem_erro="Faculdade não Cadastrado";
        } else mensagem_erro = "Nenhuma Faculdade Selecionado";
        if (mensagem_erro == null){
            siglaTextField.setText(faculdade.getSigla());
            anoCriaçãoTextField.setText(String.valueOf(faculdade.getAnoCriação()));
            nomeCompletoTextField.setText(faculdade.getNomeCompleto());
            áreaConhecimentoComboBox.setSelectedIndex(faculdade.getÁreaConhecimento().ordinal());
            sequencialTextField.setText(""+faculdade.getSequencial());
        } else informarErro(mensagem_erro);
    }//GEN-LAST:event_consultarFaculdade


    private void limparPainel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparPainel
        limparCampos();
    }//GEN-LAST:event_limparPainel

    private void alterarFaculdade(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarFaculdade
        Faculdade faculdade =(Faculdade) obterFaculdadeInformada();
        String mensagem_erro = null;
        if (faculdade != null) mensagem_erro = controlador.alterarFaculdade(faculdade);
        else mensagem_erro = "Sigla da faculdade não informado";
        if (mensagem_erro == null){
            Faculdade visão = (Faculdade) faculdades_cadastradasList.getSelectedValue();
            if(visão != null){
                visão.setNomeCompleto(faculdade.getNomeCompleto());
                visão.setSigla(faculdade.getSigla());
                faculdades_cadastradasList.updateUI();
            }
        } 
        else informarErro(mensagem_erro);
    }//GEN-LAST:event_alterarFaculdade

    private void removerFaculdade(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerFaculdade
        Faculdade visão =(Faculdade) faculdades_cadastradasList.getSelectedValue();
        String mensagem_erro = null;
        if (visão != null) mensagem_erro = controlador.removerFaculdade(visão.getSequencial());
        else mensagem_erro = "Nenhuma faculdade selecionado";
        if (mensagem_erro == null){
            modelo_lista_faculdades.removeElement(visão);
        }
        else informarErro(mensagem_erro);
    }//GEN-LAST:event_removerFaculdade

    private void siglaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siglaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_siglaTextFieldActionPerformed

    private void anoCriaçãoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anoCriaçãoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_anoCriaçãoTextFieldActionPerformed

    private void nomeCompletoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeCompletoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeCompletoTextFieldActionPerformed

    private void áreaConhecimentoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_áreaConhecimentoComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_áreaConhecimentoComboBoxActionPerformed

    private void sequencialTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sequencialTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sequencialTextFieldActionPerformed

    private void informarSucesso(String mensagem) {
        JOptionPane.showConfirmDialog(this, mensagem, "Informação", JOptionPane.INFORMATION_MESSAGE);
    }
    private void informarErro(String mensagem){
        JOptionPane.showMessageDialog(this, mensagem, "Erro", JOptionPane.ERROR_MESSAGE);
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroFaculdades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroFaculdades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroFaculdades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroFaculdades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaCadastroFaculdades().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarButton;
    private javax.swing.JLabel anoCriaçãoLabel;
    private javax.swing.JTextField anoCriaçãoTextField;
    private javax.swing.JPanel comandosPanel;
    private javax.swing.JButton consultarButton;
    private javax.swing.JLabel faculdades_cadastradasLabel;
    private javax.swing.JList<Faculdade> faculdades_cadastradasList;
    private javax.swing.JButton inserirButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limparButton;
    private javax.swing.JLabel nomeCompletoLabel;
    private javax.swing.JTextField nomeCompletoTextField;
    private javax.swing.JButton removerButton;
    private javax.swing.JLabel sequencialLabel;
    private javax.swing.JTextField sequencialTextField;
    private javax.swing.JLabel siglaLabel;
    private javax.swing.JTextField siglaTextField;
    private javax.swing.JComboBox<String> áreaConhecimentoComboBox;
    private javax.swing.JLabel áreaConhecimentoLabel;
    // End of variables declaration//GEN-END:variables

}
